### Starting build.
# Target: main.ml.depends, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, debug, extension:ml, file:main.ml, ocaml, ocamldep, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamldep -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -modules main.ml > main.ml.depends
# Target: key_gen.ml.depends, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, debug, extension:ml, file:key_gen.ml, ocaml, ocamldep, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamldep -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -modules key_gen.ml > key_gen.ml.depends
# Target: unikernel.ml.depends, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, debug, extension:ml, file:unikernel.ml, ocaml, ocamldep, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamldep -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -modules unikernel.ml > unikernel.ml.depends # cached
# Target: unikernel.cmo, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:unikernel.cmo, file:unikernel.ml, implem, ocaml, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlc -c -g -g -bin-annot -safe-string -principal -strict-sequence -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -w A-4-41-42-44 -color always -o unikernel.cmo unikernel.ml # cached
# Target: key_gen.cmo, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:key_gen.cmo, file:key_gen.ml, implem, ocaml, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlc -c -g -g -bin-annot -safe-string -principal -strict-sequence -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -w A-4-41-42-44 -color always -o key_gen.cmo key_gen.ml
# Target: main.cmo, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlc -c -g -g -bin-annot -safe-string -principal -strict-sequence -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -w A-4-41-42-44 -color always -o main.cmo main.ml
# Target: unikernel.cmx, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, compile, debug, extension:cmx, extension:ml, file:unikernel.cmx, file:unikernel.ml, implem, native, ocaml, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlopt -c -g -g -bin-annot -safe-string -principal -strict-sequence -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -w A-4-41-42-44 -color always -o unikernel.cmx unikernel.ml # cached
# Target: key_gen.cmx, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, compile, debug, extension:cmx, extension:ml, file:key_gen.cmx, file:key_gen.ml, implem, native, ocaml, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlopt -c -g -g -bin-annot -safe-string -principal -strict-sequence -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -w A-4-41-42-44 -color always -o key_gen.cmx key_gen.ml
# Target: main.cmx, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, compile, debug, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, principal, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlopt -c -g -g -bin-annot -safe-string -principal -strict-sequence -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix -w A-4-41-42-44 -color always -o main.cmx main.ml
# Target: main.native, tags: { color(always), package(duration), package(functoria-runtime), package(lwt), package(mirage-clock-unix), package(mirage-logs), package(mirage-runtime), package(mirage-types), package(mirage-types-lwt), package(mirage-unix), predicate(mirage_unix), warn(A-4-41-42-44), bin_annot, debug, dont_link_with, extension:native, file:main.native, link, native, ocaml, principal, program, quiet, safe_string, strict_sequence, traverse }
ocamlfind ocamlopt -g -linkpkg -g -package mirage-unix -package mirage-types-lwt -package mirage-types -package mirage-runtime -package mirage-logs -package mirage-clock-unix -package lwt -package functoria-runtime -package duration -predicates mirage_unix key_gen.cmx unikernel.cmx main.cmx -o main.native
# Compilation successful.
